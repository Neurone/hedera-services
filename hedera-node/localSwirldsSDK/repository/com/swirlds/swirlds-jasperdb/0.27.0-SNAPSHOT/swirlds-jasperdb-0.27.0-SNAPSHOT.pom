<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016-2022 Hedera Hashgraph, LLC
  ~
  ~ This software is the confidential and proprietary information of
  ~ Hedera Hashgraph, LLC. ("Confidential Information"). You shall not
  ~ disclose such Confidential Information and shall use it only in
  ~ accordance with the terms of the license agreement you entered into
  ~ with Hedera Hashgraph.
  ~
  ~ HEDERA HASHGRAPH MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF
  ~ THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
  ~ TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  ~ PARTICULAR PURPOSE, OR NON-INFRINGEMENT. HEDERA HASHGRAPH SHALL NOT BE LIABLE FOR
  ~ ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR
  ~ DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- Required Maven Version -->
	<modelVersion>4.0.0</modelVersion>

	<!-- Parent Configuration -->
	<parent>
		<groupId>com.swirlds</groupId>
		<artifactId>swirlds-platform</artifactId>
		<version>0.27.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<!-- Project Configuration -->
	<artifactId>swirlds-jasperdb</artifactId>
	<packaging>jar</packaging>

	<!-- Project Properties -->
	<properties>
		<!-- Maven and Java Configuration -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<!-- Dependency versions -->
		<commons-lang3.version>${dep.commons.lang3.version}</commons-lang3.version>
		<eclipse.collections.version>10.4.0</eclipse.collections.version>
		<mockito.version>${dep.mockito.version}</mockito.version>

		<sonar.coverage.jacoco.xmlReportPaths>${sonar.jacoco.path},${sonar.jacoco.alt.path}
		</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<!-- Dependencies -->
	<dependencies>
		<!-- Swirlds -->
		<dependency>
			<groupId>com.swirlds</groupId>
			<artifactId>swirlds-common</artifactId>
			<version>0.27.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.swirlds</groupId>
			<artifactId>swirlds-logging</artifactId>
			<version>0.27.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.swirlds</groupId>
			<artifactId>swirlds-virtualmap</artifactId>
			<version>0.27.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.collections</groupId>
			<artifactId>eclipse-collections-api</artifactId>
			<version>${eclipse.collections.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.collections</groupId>
			<artifactId>eclipse-collections</artifactId>
			<version>${eclipse.collections.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>

		<!-- JUnit 5.x -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.swirlds</groupId>
			<artifactId>swirlds-common-test</artifactId>
			<version>0.27.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Profiles -->
	<profiles>
		<!-- Automatic Profile (not for manual use) -->
		<!--
		We support the use of the environment variable MAVEN_OPTS to allow extra JVM & Maven options to be passed
		through to unit tests. This profile is to handle cases where the MAVEN_OPTS environment variable is not set or
		undefined by creating an empty environment variable. The profile below should not be modified and needs to
		remain here in the parent POM file. Also, this profile should be copied to all other POM files that use
		the MAVEN_OPTS environment variable in their Surefire plugin definitions. Failing to include this profile when
		launching surefire tests where the MAVEN_OPTS is undefined will result in erroneous error messages.

		CircleCI depends on the MAVEN_OPTS environment variable in order to specify the appropriate amount of
		maximum memory a maven process (including surefire) may consume. CircleCI passes an appropriate
		JVM switch (-Xmx) via the MAVEN_OPTS variable to enforce the correct memory limits.

		Additionally, the MAVEN_OPTS variable allows developers to pass custom JVM arguments when launching unit tests by
		specifying them using the maven -D switch. See the following examples:

			mvn -DMAVEN_OPTS=-Xmx8g test
			mvn -DMAVEN_OPTS="-Xmx8g -Xms8g" test
			mvn -DMAVEN_OPTS="-Xmx8g -XX:+UnlockExperimentalVMOptions -XX:+UseZGC" test

		This comment should be copied along with this profile to every POM file that uses the MAVEN_OPTS variable.
		-->
		<profile>
			<id>default-variable-maven-opts</id>
			<activation>
				<property>
					<name>!env.MAVEN_OPTS</name>
				</property>
			</activation>
			<properties>
				<env.MAVEN_OPTS/>
			</properties>
		</profile>

		<!-- Automatic Profile (not for manual use) -->
		<!--
		In order to support selective activation of the JaCoCo maven plugin, this profile should be copied along with
		this comment to every POM file that uses the argLine variable.
		-->
		<profile>
			<id>default-variable-argLine</id>
			<activation>
				<property>
					<name>!argLine</name>
				</property>
			</activation>
			<properties>
				<argLine/>
			</properties>
		</profile>
	</profiles>

	<!-- $$BEGIN_OPEN_REVIEW_REMOVE_1$$ -->
	<!-- Build Configuration -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>@{argLine} ${env.MAVEN_OPTS}
						--add-opens com.swirlds.jasperdb/com.swirlds.jasperdb.collections=ALL-UNNAMED
						--add-opens com.swirlds.jasperdb/com.swirlds.jasperdb.utilities=ALL-UNNAMED
						--add-opens com.swirlds.jasperdb/com.swirlds.jasperdb.files=ALL-UNNAMED
						--add-opens com.swirlds.jasperdb/com.swirlds.jasperdb=ALL-UNNAMED
					</argLine>
					<failIfNoTests>true</failIfNoTests>
					<forkCount>1</forkCount>
					<reuseForks>true</reuseForks>
					<useSystemClassLoader>true</useSystemClassLoader>
					<excludes>
						<exclude>**/*HammerTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
